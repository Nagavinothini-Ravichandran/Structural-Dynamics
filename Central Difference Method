% =========================================================================
%  Project      : Structural Dynamics
%  File Name    : Central Difference Method.m
%  Description  : Simple MATLAB code of the central difference method with detailed steps. Modify the values in the "INPUT" section according to your problem.
%
%  Copyright (c) 2025 Nagavinothini Ravichandran
% =========================================================================
clc;
clear;
%% INPUT
m = 1000; % mass in kg
k = 200; % stiffness in N/m
c = 20; % damping in Ns/m
t = 100; % total time in seconds
 
%% step 1.1
% specify the time step and initial conditions
dt = 0.01; % Time step, delta t in seconds
dis = 0; % initial displacement in m
vel = 0; % initial velocity in m/s
 
% sub step
w = sqrt(k/m); % natural frequency in rad/s
tt = t/dt; % number of time steps
tv = 0:dt:t; % time vector
p = sin(w*tv); % forcing function 
 
%% step 1.2
% calculate initial acceleration
acc = (p(1)-(c*vel)-(k*dis))/m;
disp = dis-(dt*vel)+(dt*dt*acc/2);
 
%% step 1.3
% calculate the effective stiffness
keff = (m/(dt^2))+(c/(2*dt));
 
%% step 1.4
% calculate integration constants
a = (m/(dt^2))-(c/(2*dt));
b = k-((2*m)/(dt^2));
 
%% step 2
% solution
finaldisp = [disp zeros(1,round(tt)-1)];
finaldis = [dis zeros(1,round(tt)-1)];
finalvel = [vel zeros(1,round(tt)-1)];
finalacc = [acc zeros(1,round(tt)-1)];
for i=1:round(tt);
    peff(i) = p(i)-(a*finaldisp(i))-(b*finaldis(i));
    finaldis(i+1) = peff(i)/keff;
    finalvel(i) = (finaldis(i+1)-finaldisp(i))/(2*dt);
    finalacc(i) = (finaldis(i+1)-(2*finaldis(i))+finaldisp(i))/(dt^2);
    finaldisp(i+1) = finaldis(i);
end
 
%% plot
plot(tv,finaldis,'r')
xlabel('Time(seconds)');
ylabel('Displacement(m)');
[max(finaldis) min(finaldis)]
